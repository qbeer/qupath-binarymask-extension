plugins {
    id 'java'
    id 'org.openjfx.javafxplugin' version '0.0.7'
}

javafx {
    version = "12.0.1"
    modules = ['javafx.controls', 'javafx.fxml']
}

group 'qupath-proj'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url 'https://jitpack.io'
    }
    maven {
        url 'https://plugins.gradle.org/m2/'
    }
}

apply plugin: 'java'

dependencies {
    compile 'com.github.qupath.qupath:qupath-core-awt:v0.1.2'
    compile 'com.github.qupath.qupath:qupath-gui-fx:v0.1.2'
    compile 'com.github.qupath.qupath:qupath-processing-ij:v0.1.2'
    compile 'net.imagej:ij:1.52k'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}


jar {
    manifest {
        attributes 'Implementation-Title': 'QuPath Binary Mask extension',
                'Implementation-Version': version
    }
    archiveName 'qupath-extension-binarymask.jar'
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Binary mask for QuPath',
                'Implementation-Version': 0.1,
                'Main-Class': 'qupath.extensions.masker.BinaryMaskExtension'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}